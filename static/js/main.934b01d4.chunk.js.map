{"version":3,"sources":["Components/Header/Header.js","Components/Footer/Footer.js","Pages/Home/Home.js","client.js","Pages/Contact/Contact.js","Pages/Info/Info.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","Home","sanityClient","projectId","dataset","useCdn","builder","imageUrlBuilder","Contact","useState","allPostsData","setAllPosts","useEffect","fetch","then","data","catch","console","error","log","map","coach","name","title","src","source","image","width","url","alt","slug","Info","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAUeA,MARf,WACE,OACE,qBAAKC,UAAU,SAAf,qB,MCMWC,MARf,WACE,OACE,qBAAKD,UAAU,SAAf,qB,MCMWE,MARf,WACE,OACE,qBAAKF,UAAU,OAAf,mB,gBCFWG,E,MAAAA,GAAa,CAC1BC,UAAW,WACXC,QAAS,aACTC,QAAQ,I,iBCAJC,G,OAAUC,IAAgBL,IA2CjBM,MAtCf,WACE,MAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAqBC,EAArB,KAuBA,OArBAC,qBAAU,WACRV,EACGW,MADH,oKAcGC,MAAK,SAACC,GAAD,OAAUJ,EAAYI,MAC3BC,MAAMC,QAAQC,SAChB,IAEHD,QAAQE,IAAIT,GAGV,sBAAKX,UAAU,UAAf,UACE,mDACGW,GAAcA,EAAaU,KAAI,SAACC,GAAD,OAC9B,sBAAKtB,UAAU,QAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBsB,EAAMC,OAC5B,oBAAIvB,UAAU,QAAd,SAAuBsB,EAAME,QAC7B,qBAAKC,KAnCDC,EAmCaJ,EAAMK,MAlC1BpB,EAAQoB,MAAMD,IAkCmBE,MAAM,KAAKC,MAAOC,IAAK,cAAcR,EAAMC,SAH/CD,EAAMS,MAhC5C,IAAgBL,S,OCIDM,MARf,WACE,OACE,qBAAKhC,UAAU,OAAf,mB,OCsCWiC,MA7Bf,WACE,OACE,qBAAKjC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UAEE,eAAC,IAAD,CAAOkC,KAAK,IAAZ,UACE,cAAC,EAAD,IACA,qBAAKlC,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,WAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,QAAlB,SACE,cAAC,EAAD,WAIN,cAAC,EAAD,cCtBGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.934b01d4.chunk.js","sourcesContent":["import './Header.css';\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n        Header\n    </div>\n  );\n}\n\nexport default Header;","import './Footer.css';\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n        Footer\n    </div>\n  );\n}\n\nexport default Footer;","import './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n        Home\n    </div>\n  );\n}\n\nexport default Home;","import sanityClient from \"@sanity/client\";\n\nexport default sanityClient({\n  projectId: \"411iwivp\", // find this at manage.sanity.io or in your sanity.json\n  dataset: \"production\", // this is from those question during 'sanity init'\n  useCdn: true,\n});","import React, { useEffect, useState } from \"react\";\nimport sanityClient from '../../client';\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport './Contact.css';\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nfunction Contact() {\n  const [allPostsData, setAllPosts] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"coach\"]{\n        name,\n        title,\n        slug,\n        image{\n          asset->{\n          _id,\n          url\n        }\n      }\n    }`\n      )\n      .then((data) => setAllPosts(data))\n      .catch(console.error);\n  }, []);\n\n  console.log(allPostsData)\n\n  return (\n    <div className=\"Contact\">\n      <h1>Meet the coaches!</h1>\n        {allPostsData&&allPostsData.map((coach)=>\n          <div className=\"coach\" key={coach.slug}>\n            <h2 className=\"name\">{coach.name}</h2>\n            <h3 className=\"title\">{coach.title}</h3>\n            <img src={urlFor(coach.image).width(200).url()} alt={\"Picture of \"+coach.name} />\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default Contact;","import './Info.css';\n\nfunction Info() {\n  return (\n    <div className=\"Info\">\n        Info\n    </div>\n  );\n}\n\nexport default Info;","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//Import Components\nimport Header from './Components/Header/Header'\nimport Footer from './Components/Footer/Footer'\n\n//Import Pages\nimport Home from './Pages/Home/Home'\nimport Contact from './Pages/Contact/Contact'\nimport Info from './Pages/Info/Info'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {/* Followed Alex's structure to potentiall add pages with no header or footer */}\n          <Route path=\"*\">\n            <Header />\n            <div className=\"Container\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route exact path=\"/contact\">\n                  <Contact />\n                </Route>\n                <Route exact path=\"/info\">\n                  <Info />\n                </Route>\n              </Switch>\n            </div>\n            <Footer />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}